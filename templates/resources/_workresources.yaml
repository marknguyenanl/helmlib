{{/* # Test successfully passing rr values to this */}}
{{/* {{ define "helmlib.machine" }} */}}
{{/* {{ $vm1l1 := (((.Values.global).machines).vm1l1) }} */}}
{{/* resources: */}}
{{/*   requests: */}}
{{/*     cpu: {{ $vm1l1.reqcpu }}m */}}
{{/*     memory: {{ mul $vm1l1.reqcpu $vm1l1.memtocpu }}Mi */}}
{{/*   limits: */}}
{{/*     cpu: {{ mul $vm1l1.reqcpu $vm1l1.limittoreq}}m */}}
{{/*     memory: {{ mul $vm1l1.reqcpu $vm1l1.memtocpu $vm1l1.limittoreq }}Mi */}}
{{/* {{ end }} */}}

{{- define "helmlib.machineused" -}}
{{- $machinesize := .Values.overlay.machineused.size -}}
{{- $machineseries := .Values.overlay.machineused.series -}}
{{- $sizeValue := index .Values.global.machinesize $machinesize -}}
{{- $series := index .Values.global.machineseries $machineseries -}}
{{- $cpuToMem := $series.cputomem -}}
{{- $reqToLimit := $series.reqtolimit -}}

{{- $cpu := printf "%dm" $sizeValue -}}
{{- $memory := printf "%dMi" (mul $sizeValue $cpuToMem) -}}
{{- $cpuLimit := printf "%dm" (mul $sizeValue (add 1 $reqToLimit)) -}}
{{- $memoryLimit := printf "%dMi" (mul $sizeValue $cpuToMem (add 1 $reqToLimit)) -}}

resources:
  requests:
    cpu: {{ $cpu }}
    memory: {{ $memory }}
  limits:
    cpu: {{ $cpuLimit }}
    memory: {{ $memoryLimit }}
{{- end }}
