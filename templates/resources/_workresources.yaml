{{/* # Test successfully passing rr values to this */}}
{{/* {{ define "helmlib.machine" }} */}}
{{/* {{ $vm1l1 := (((.Values.global).machines).vm1l1) }} */}}
{{/* resources: */}}
{{/*   requests: */}}
{{/*     cpu: {{ $vm1l1.reqcpu }}m */}}
{{/*     memory: {{ mul $vm1l1.reqcpu $vm1l1.memtocpu }}Mi */}}
{{/*   limits: */}}
{{/*     cpu: {{ mul $vm1l1.reqcpu $vm1l1.limittoreq}}m */}}
{{/*     memory: {{ mul $vm1l1.reqcpu $vm1l1.memtocpu $vm1l1.limittoreq }}Mi */}}
{{/* {{ end }} */}}

{{- define "helmlib.machineused" -}}
{{/* {{- $usedsize := ((.Values.overlay).machineused).size -}} */}}
{{/* {{- $usedseries := ((.Values.overlay).machineused).series -}} */}}
{{- $capValue := tpl (printf "{{ .Values.global.machinesize.%s }}" ((.Values.overlay).machineused).size) . -}}
{{/* {{- $usedmachine := tpl (printf ".Values.global.machineseries.%s" ((.Values.overlay).machineused).series) . -}} */}}
{{- $cpuToMem := tpl (printf "{{ .Values.global.machineseries.%s.cputomem }}" ((.Values.overlay).machineused).series) . -}}
{{- $reqToLimit := tpl (printf "{{ .Values.global.machineseries.%s.reqtolimit }}" ((.Values.overlay).machineused).series) . -}}
{{/* {{- $cpuToMem := $usedmachine.cputomem -}} */}}
{{/* {{- $reqToLimit := $usedmachine.reqtolimit -}} */}}

{{- $cpuRequest := printf "%dm" (mul $capValue $cpuToMem $reqToLimit) -}}
{{- $memoryRequest := printf "%dMi" (mul $capValue $reqToLimit) -}}
{{- $cpuLimit := printf "%dm" (mul $capValue $cpuToMem) -}}
{{- $memoryLimit := $capValue -}}

resources:
  requests:
    cpu: {{ $cpuRequest }}
    memory: {{ $memoryRequest }}
  limits:
    cpu: {{ $cpuLimit }}
    memory: {{ $memoryLimit }}
{{- end }}
